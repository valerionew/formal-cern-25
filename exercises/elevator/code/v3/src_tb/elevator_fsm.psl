
vunit elevator_fsm_psl(elevator_fsm(fsm)) {


    default clock is rising_edge(clk_i);

    assume {rst_i};

    never_on_two_floors: assert never (floor0_o and floor1_o);

    door_never_open_if_not_on_floor: assert never (open_o and not (floor0_o or floor1_o));

    door_opens_when_floor0_and_called: assert always (
        (floor0_o and call0_i) -> next open_o
    ) abort rst_i;
    door_opens_when_floor1_and_called: assert always (
        (floor1_o and call1_i) -> next open_o
    ) abort rst_i;

    elevator_doesnt_move_if_calls_not_served0: assert always (
        (floor0_o and not call1_i) -> next(floor0_o)
    ) abort rst_i;
    elevator_doesnt_move_if_calls_not_served1: assert always (
        (floor1_o and not call0_i) -> next(floor1_o)
    ) abort rst_i;

    timer_starts_after_call0: assert always (
        (floor0_o and call0_i) -> counter_init_o
    ) abort rst_i;
    timer_starts_after_call1: assert always (
        (floor1_o and call1_i) -> counter_init_o
    ) abort rst_i;

    door_opens_after_timer_done: assert always (
        (counter_done_i) -> next open_o
    ) abort (rst_i or counter_init_o);

    door_closes_after_counter_done: assert always (
        (open_o and counter_done_i) -> next(not open_o)
    ) abort (rst_i or counter_init_o);

}

