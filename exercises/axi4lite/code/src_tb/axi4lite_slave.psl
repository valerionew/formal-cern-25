
vunit axi4lite_slave_psl(axi4lite_slave) {

    default clock is rising_edge(clk_i);

    assume {reset_i};

    -- AXI4-Lite Slave Interface Assertions
    -- AXI Reset:
    -- During reset a slave interface must drive RVALID and BVALID LOW
    assert always (reset_i |-> (not axi_bvalid_o and not axi_rvalid_o));

    cover {axi_bvalid_o and axi_bready_i};
    cover {axi_rvalid_o and axi_rready_i};
   
    -- A valid must remain high once asserted until the transaction is complete
    b_no_unassert_valid: assert always ({axi_bvalid_o; not axi_bvalid_o} |-> prev(axi_bready_i)) abort reset_i;
    r_no_unassert_valid: assert always ({axi_rvalid_o; not axi_rvalid_o} |-> prev(axi_rready_i)) abort reset_i;

    b_no_change_if_valid: assert always (
        {axi_bvalid_o} 
        |=> prev(axi_bresp_o) = axi_bresp_o
    ) abort reset_i or axi_bready_i;
    r_no_change_if_valid: assert always (
        {axi_rvalid_o} 
        |=> prev(axi_rdata_o) = axi_rdata_o
    ) abort reset_i or axi_rready_i;

    -- the slave must wait for AWVALID, AWREADY, WVALID, and WREADY to be asserted before asserting
    -- BVALID




    -- the slave must also wait for WLAST to be asserted before asserting BVALID because the write response,
    -- BRESP must be signaled only after the last data transfer of a write transaction   
    




}
